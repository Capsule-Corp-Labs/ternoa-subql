specVersion: 1.0.0
name: Ternoa Indexer
version: 1.0.0
runner:
  node:
    name: "@subql/node"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: Ternoa SubQuery Indexer project
repository: "https://github.com/capsule-corp-ternoa/ternoa-subql"
schema:
  file: ./schema.graphql
network:
  chainId: "0xb4cee653b8b087316d19233c994a0ca850fd165bc849897140bbf1353f984b1a"
  endpoint: wss://dev-0.ternoa.network/
dataSources:
  - kind: substrate/Runtime
    startBlock: 1
    mapping:
      file: "./dist/index.js"
      handlers:
        # Balance
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: BalanceSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Deposit
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: DustLost
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Endowed
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Reserved
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Slashed
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Transfer
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Unreserved
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Withdraw

        # Bridge
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: bridge
            method: DepositMade

        # NFT
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTBurned
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTTransferred
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTDelegated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTRoyaltySet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: NFTListed
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: NFTUnlisted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: NFTSold

        # Secret NFT
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: SecretAddedToNFT
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: SecretNFTSynced

        # Capsule NFT
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTConvertedToCapsule
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CapsuleOffchainDataSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CapsuleSynced
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CapsuleReverted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CapsuleKeyUpdateNotified

        # Collection
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CollectionCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CollectionBurned
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CollectionClosed
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: CollectionLimited
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: nft
            method: NFTAddedToCollection

        # Marketplace
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: MarketplaceCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: MarketplaceOwnerSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: MarketplaceKindSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: MarketplaceConfigSet
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: marketplace
            method: MarketplaceMintFeeSet

        # Rent
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractCanceled
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractStarted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractRevoked
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractOfferCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractOfferRetracted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractSubscriptionTermsChanged
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractSubscriptionTermsAccepted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractEnded
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractSubscriptionPeriodStarted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: rent
            method: ContractExpired

        # Auction
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: AuctionCreated
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: AuctionCancelled
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: AuctionCompleted
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: BidAdded
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: BidRemoved
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: auction
            method: BalanceClaimed

        # Misc
        - handler: handleEvent
          kind: substrate/EventHandler
          filter:
            module: associatedAccounts
            method: UserAccountAdded
